services:
  app:
    image: stellayou/taipei-day-trip:${VERSION}
    build:
      args:
        VERSION: ${VERSION}
        MYSQL_DATABASE: ${MYSQL_DATABASE}
        MYSQL_HOST: ${MYSQL_HOST}
        MYSQL_PORT: ${MYSQL_PORT}
        MYSQL_USER: ${MYSQL_USER}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
        ACCESS_TOKEN_EXPIRE_DAYS: ${ACCESS_TOKEN_EXPIRE_DAYS:-7}
        ALGORITHM: ${ALGORITHM:-HS256}
        MERCHANT_ID: ${MERCHANT_ID}
        SECRET_KEY: ${SECRET_KEY}
        PARTNER_KEY: ${PARTNER_KEY}
        TAPPAY_SANDBOX_URL: ${TAPPAY_SANDBOX_URL}
      context: .
      dockerfile: Dockerfile
    depends_on:
      mydb:
        condition: service_healthy
    environment:
      - VERSION=${VERSION}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - ACCESS_TOKEN_EXPIRE_DAYS=${ACCESS_TOKEN_EXPIRE_DAYS:-7}
      - ALGORITHM=${ALGORITHM:-HS256}
      - MERCHANT_ID=${MERCHANT_ID}
      - SECRET_KEY=${SECRET_KEY}
      - PARTNER_KEY=${PARTNER_KEY}
      - TAPPAY_SANDBOX_URL=${TAPPAY_SANDBOX_URL}
      # - MYSQL_HOST=mydb
      # - MYSQL_PORT=3306
      # - MYSQL_DATABASE=taipei_attractions
      # - MYSQL_USER=root
      # - MYSQL_PASSWORD=23322907
    ports:
      - "8001:8000"
    networks:
      - app-network
  mydb:
    image: mysql:8.4
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      # <Port exposed> : <MySQL Port running inside container>
      - "3307:3306"
    expose:
      # Opens port 3306 on the container
      - "3306"
      # Where our data will be persisted
    volumes:
      - my-db:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network
volumes:
  my-db:
networks:
  app-network:
    driver: bridge
