name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Next Version
        id: version
        run: |
          LATEST_TAG=$(git tag --sort=-creatordate | head -n 1)
          if [ -z "$LATEST_TAG" ]; then
            NEXT_TAG="v1.0.0"
          else
            COMMIT_MSG=$(git log -1 --pretty=%B)
            CURRENT_VERSION=$(echo $LATEST_TAG | sed 's/v//')
            MAJOR=$(echo $CURRENT_VERSION | cut -d. -f1)
            MINOR=$(echo $CURRENT_VERSION | cut -d. -f2)
            PATCH=$(echo $CURRENT_VERSION | cut -d. -f3)
            
            if echo "$COMMIT_MSG" | grep -q "BREAKING CHANGE\|feat.*!:\|fix.*!:\|refactor.*!:"; then
              NEXT_TAG="v$((MAJOR + 1)).0.0"
            elif echo "$COMMIT_MSG" | grep -q "feat(.*):"; then
              NEXT_TAG="v${MAJOR}.$((MINOR + 1)).0"
            else
              NEXT_TAG="v${MAJOR}.${MINOR}.$((PATCH + 1))"
            fi
          fi
          DATE=$(date +%Y%m%d)
          echo "VERSION=${NEXT_TAG}-${DATE}" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          IMAGE=stellayou/taipei-day-trip
          docker build -t $IMAGE:${{ env.VERSION }} .

      - name: Push to Docker Hub
        run: |
          docker push $IMAGE:${{ env.VERSION }}

      - name: Login to AWS ECR
        run: |
          echo "${{ secrets.AWS_ACCESS_KEY_ID }}" > aws_access_key_id
          echo "${{ secrets.AWS_SECRET_ACCESS_KEY }}" > aws_secret_access_key
          aws configure set aws_access_key_id $(cat aws_access_key_id)
          aws configure set aws_secret_access_key $(cat aws_secret_access_key)
          aws configure set default.region your-region

      - name: Build and Push Docker Image to ECR
        run: |
          $(aws ecr get-login --no-include-email --region your-region)
          docker tag $IMAGE:${{ env.VERSION }} your-account-id.dkr.ecr.your-region.amazonaws.com/your-image-name:${{ env.VERSION }}
          docker push your-account-id.dkr.ecr.your-region.amazonaws.com/your-image-name:${{ env.VERSION }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull stellayou/taipei-day-trip:${{ env.VERSION }}
            docker-compose down
            docker-compose up -d
